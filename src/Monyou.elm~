module Monyou exposing (..)

import Html exposing (Html)
import Html.Attributes
import Html.Events
import Svg exposing (svg, rect)
import Svg.Attributes as SAt
import Browser
import Element exposing (..)
import Element.Background as Background
import Element.Border as Border
import Element.Region exposing (..)
import Element.Background as Background
import Element.Border as Border
import Element.Events as Ev
import Element.Font as Font
import Element.Input as Input
import ColorPicker
import Color exposing (Color)
import Html.Events.Extra.Pointer exposing (..)
import Html.Events.Extra.Mouse as Mouse
import Asanoha
import Ichimatsu
import Rokkaku
import Editor
import Types exposing (..)

main = Browser.sandbox {init = init
                       ,update = update
                       ,view = view
                       }
    

init: Model
init = {unit = 50
       ,shapes = [Circle (CircleData 0 0 0.1 "pink" "red")
                 ]
       ,monyou = Asanoha
       }

update : Msg -> Model -> Model
update  msg model =
    case msg of
        Crystal crystalType ->
            {model|monyou = crystalType}
        _ ->
            model

screen : Model ->Element Msg
screen model = html (svg [ SAt.width "700"
                     , SAt.height "700"
                     ]
                   ([rect [SAt.width "100%"
                          ,SAt.height "100%"
                          ,SAt.fill "white"
                          ,SAt.stroke "black"
                          ][]
                    ]++ (case model.monyou of
                             Asanoha -> Asanoha.rhombi model
                             Ichimatsu -> Ichimatsu.rhombi model
                             Rokkaku -> Rokkaku.rhombi model
                        )
                   )
              )

tools =
    (column [spacing 10
            ,height fill
            ,Border.color color.blue
            ,Border.width 2
            ,Background.color color.lightGrey
            ,padding 10
            ]
         [el[padding 10
            ,Background.color color.white
            ,Border.color color.blue
            ,Border.width 2
            ]
              (row [spacing 10]
                   [text "紋様群"
                   ,button "六角" (Crystal Rokkaku)
                   ,button "麻の葉" (Crystal Asanoha)
                   ,button "市松" (Crystal Ichimatsu)
                   ]
              )
         ,el[padding 10
            ,Background.color color.white
            ,Border.width 2
            ,Border.color color.blue
            ]
              (row [spacing 10]
                   [text "モード"
                   ,button "折れ線" (Crystal Rokkaku)
                   ,button "多角形" (Crystal Asanoha)
                   ,button "円" (Crystal Ichimatsu)
                   ,button "消しゴム" (Crystal Ichimatsu)
                   ]
              )
         ,el[padding 10
            ,Background.color color.white
            ,Border.width 2
            ,Border.color color.blue
            ]
              (column [spacing 10]
                   [text "塗り色"
                   ,html (ColorPicker.view (Color.rgb 255 200 200) ColorPicker.empty
                         |> Html.map ColorPicked 
                         )
                   ]
              )
         ,el[padding 10
            ,Background.color color.white
            ,Border.width 2
            ,Border.color color.blue
            ]
              (column [spacing 10]
                   [text "線の色"
                   ,html (ColorPicker.view (Color.rgb 255 200 200) ColorPicker.empty
                         |> Html.map LineColorPicked 
                         )
                   ]
              )
         ]
    )
         
view : Model -> Html Msg
view model =
    layout[]
        (row [spacing 20
             ,width fill
             ,padding 10
             ,Border.width 1
             ,Background.color color.white
             ]
             [tools
             ,el[] (Editor.editor model)
             ,el[] (screen model)
             ]
        )

button : String -> Msg -> Element Msg
button label msg = Input.button [padding 5
                            , Background.color color.lightBlue
                            , Border.width 2
                            , Border.rounded 6
                            , Border.color color.blue
                            , Border.shadow
                                     { offset = ( 4, 4 ), size = 3, blur = 10, color = color.lightGrey }
                            , Font.color color.blue
                            , Ev.onClick  msg
                            ]
               {label = text label
               ,onPress = Nothing
               }
            
color =
    { blue = rgb255 0x72 0x9F 0xCF
    , darkCharcoal = rgb255 0x2E 0x34 0x36
    , lightBlue = rgb255 0xC5 0xE8 0xF7
    , lightGrey = rgb255 0xE0 0xE0 0xE0
    , white = rgb255 0xFF 0xFF 0xFF
    }



